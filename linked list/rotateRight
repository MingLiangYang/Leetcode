/**
给定一个链表，旋转链表，将链表每个节点向右移动 k 个位置，其中 k 是非负数。

示例 1:

输入: 1->2->3->4->5->NULL, k = 2
输出: 4->5->1->2->3->NULL
解释:
向右旋转 1 步: 5->1->2->3->4->NULL
向右旋转 2 步: 4->5->1->2->3->NULL
 */
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) {
        int len=0;
        if(head==NULL||head->next==NULL)return head;
        ListNode * p=head;
        while(p){
            p=p->next;
            len++;
        }
        k%=len;
        while(k--){
            move(head);
        }
        return head;
    }
private:
    void move(ListNode * & head){
        ListNode * p=head;
        ListNode * prv=head;
        while(p->next){
            prv=p;
            p=p->next;
        }
        prv->next=NULL;
        p->next=head;
        head=p;
    }
};
