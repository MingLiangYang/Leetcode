/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* mergeKLists(vector<ListNode*>& lists) {
        vector<int> res;
        if(lists.size()==0) return NULL;
        /*
        int j;
        int count=0;
        for(j =0;j<lists.size();j++){
             if(lists[j]==NULL) count++;
        }
        if(count==lists.size())return NULL;
       */
        for(int i=0;i<lists.size();i++){
            ListNode * p=lists[i];
            while(p){
                res.push_back(p->val);
                p=p->next;
            }
        }
        if(res.size()==0) return NULL;
        sort(res.begin(),res.end());
        int n=res.size();
        ListNode * head=new ListNode(res[0]);
        ListNode * p=head;
        for(int i=1;i<n;i++){
            p->next=new ListNode(res[i]);
            p=p->next;
        }
        return head;
    }
};
