/*
在一个二维数组中，每一行都按照从左到右递增的顺序排序，每一列都按照从上到下递增的顺序排序。

请完成一个函数，输入这样的一个二维数组和一个整数，判断数组中是否含有该整数。

样例
输入数组：

[
  [1,2,8,9]，
  [2,4,9,12]，
  [4,7,10,13]，
  [6,8,11,15]
]

如果输入查找数值为7，则返回true，

如果输入查找数值为5，则返回false。
*/

class Solution {
public:
    bool searchArray(vector<vector<int>> array, int target) {
        if(array.size() == 0) return false;
        int m,n;
        m = array[0].size();//列
        n = array.size();//行
        //二分查找，先第一行，再找对应列；
        int l = 0;
        int r = m-1;
        
        while(l < r){
            int mid = (l+r+1) >> 1;
            if(target >= array[0][mid]) l = mid;
            else r = mid - 1;
        }
        //此时l==r==mid 
        //找本列
        int k = l;
        l = 0;
        r = n - 1;
        while(l < r){
           int mid = (l + r) >> 1;
            if(target > array[mid][k]) l = mid + 1;
            else r = mid;
        }
        if(l > n) return false;
        if(array[l][k] == target) return true;
        else return false;
    }
};
